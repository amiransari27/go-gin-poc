definitions:
  entity.LoginResponse:
    properties:
      accessToken:
        type: string
    type: object
  entity.Note:
    properties:
      content:
        type: string
      title:
        type: string
    type: object
  entity.RegisterUser:
    properties:
      firstName:
        type: string
      lastName:
        type: string
      password:
        minLength: 6
        type: string
      username:
        minLength: 4
        type: string
    required:
    - password
    - username
    type: object
  entity.UserCredentials:
    properties:
      password:
        minLength: 6
        type: string
      username:
        minLength: 4
        type: string
    required:
    - password
    - username
    type: object
  model.Note:
    properties:
      _id:
        type: string
      content:
        type: string
      createdAt:
        type: string
      noteId:
        type: string
      sharedWith:
        items:
          type: string
        type: array
      title:
        type: string
      updatedAt:
        type: string
      userId:
        type: string
    type: object
  model.User:
    properties:
      _id:
        type: string
      createdAt:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      updatedAt:
        type: string
      userId:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /login:
    post:
      consumes:
      - application/json
      description: login user
      parameters:
      - description: Login payload
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.UserCredentials'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.LoginResponse'
      summary: Login user
      tags:
      - Auth
  /me:
    get:
      consumes:
      - application/json
      description: fetch logged in user data
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
      security:
      - ApiKeyAuth: []
      summary: Me
      tags:
      - Auth
  /notes:
    get:
      consumes:
      - application/json
      description: Fetch all notes for user
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Note'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Fetch notes
      tags:
      - Notes
    post:
      consumes:
      - application/json
      description: add new note
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: note payload
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.Note'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Add new Note
      tags:
      - Notes
  /notes/{noteId}:
    get:
      consumes:
      - application/json
      description: Fetch one note for user by note id
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: note id
        in: path
        name: noteId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Note'
      security:
      - ApiKeyAuth: []
      summary: Fetch note
      tags:
      - Notes
    put:
      consumes:
      - application/json
      description: update a note by its id
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: note id
        in: path
        name: noteId
        required: true
        type: string
      - description: note payload
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.Note'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Note'
      security:
      - ApiKeyAuth: []
      summary: Update Note
      tags:
      - Notes
  /register:
    post:
      consumes:
      - application/json
      description: register new user
      parameters:
      - description: Register payload
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.RegisterUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Register user
      tags:
      - Auth
  /status:
    get:
      consumes:
      - application/json
      description: do ping
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: check status
      tags:
      - Ping
swagger: "2.0"
